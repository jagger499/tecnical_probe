"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var ripple_1 = require("@rmwc/ripple");
var icon_1 = require("@rmwc/icon");
var base_1 = require("@rmwc/base");
/**
 * The Button component.
 */
exports.Button = ripple_1.withRipple({
    surface: false
})(base_1.createComponent(function Button(props, ref) {
    var dense = props.dense, raised = props.raised, unelevated = props.unelevated, outlined = props.outlined, danger = props.danger, icon = props.icon, label = props.label, trailingIcon = props.trailingIcon, children = props.children, rest = tslib_1.__rest(props, ["dense", "raised", "unelevated", "outlined", "danger", "icon", "label", "trailingIcon", "children"]);
    var className = base_1.useClassNames(props, [
        'mdc-button',
        {
            'mdc-button--dense': dense,
            'mdc-button--raised': raised,
            'mdc-button--unelevated': unelevated,
            'mdc-button--outlined': outlined
        }
    ]);
    if (danger) {
        var existingStyle = rest.style || {};
        var dangerStyle = {
            '--mdc-theme-primary': 'var(--mdc-theme-error)',
            '--mdc-theme-on-primary': 'var(--mdc-theme-on-error)'
        };
        rest.style = tslib_1.__assign(tslib_1.__assign({}, dangerStyle), existingStyle);
    }
    return (react_1.default.createElement(base_1.Tag, tslib_1.__assign({ tag: "button" }, rest, { ref: ref, className: className }),
        react_1.default.createElement(ButtonRipple, null),
        !!icon && react_1.default.createElement(ButtonIcon, { icon: icon }),
        react_1.default.createElement("span", { className: "mdc-button__label" },
            label,
            children),
        !!trailingIcon && react_1.default.createElement(ButtonIcon, { icon: trailingIcon })));
}));
/*********************************************************************
 * Bits
 *********************************************************************/
var ButtonRipple = react_1.default.memo(function ButtonRipple() {
    return react_1.default.createElement("div", { className: "mdc-button__ripple" });
});
/** An icon that goes inside of buttons. This is an instance of the Icon component. */
var ButtonIcon = base_1.createMemoComponent(function ButtonIcon(props, ref) {
    var className = base_1.useClassNames(props, ['mdc-button__icon']);
    return react_1.default.createElement(icon_1.Icon, tslib_1.__assign({}, props, { className: className, ref: ref }));
});
