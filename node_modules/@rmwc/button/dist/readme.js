"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.galleryExample = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var _doc_utils_1 = require("@doc-utils");
var generated_props_json_1 = tslib_1.__importDefault(require("./generated-props.json"));
var generated_examples_json_1 = tslib_1.__importDefault(require("./generated-examples.json"));
var _1 = require(".");
var circular_progress_1 = require("../circular-progress");
function default_1() {
    return (react_1.default.createElement(_doc_utils_1.Docs, { title: "Buttons", lead: "Buttons communicate the action that will occur when the user touches them.", module: "@rmwc/button", styles: [
            '@material/button/dist/mdc.button.css',
            '@rmwc/@rmwc/icon/icon.css',
            '@material/ripple/dist/mdc.ripple.css'
        ], docsLink: "https://material.io/develop/web/components/buttons/", examples: generated_examples_json_1.default },
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Default" },
            react_1.default.createElement(_1.Button, { label: "Button" })),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Icons" },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Button, { label: "Icon", icon: "favorite" }),
                react_1.default.createElement(_1.Button, { label: "Trailing", trailingIcon: "keyboard_arrow_right" }),
                react_1.default.createElement(_1.Button, { label: "Loading", icon: react_1.default.createElement(circular_progress_1.CircularProgress, null) }))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Variants" },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Button, { label: "Raised", raised: true }),
                react_1.default.createElement(_1.Button, { label: "Unelevated", unelevated: true }),
                react_1.default.createElement(_1.Button, { label: "Outlined", outlined: true }),
                react_1.default.createElement(_1.Button, { label: "Dense", dense: true }),
                react_1.default.createElement(_1.Button, { label: "No Ripple", ripple: false }))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Danger" },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Button, { label: "Danger", danger: true, raised: true }),
                react_1.default.createElement(_1.Button, { label: "Danger", danger: true, outlined: true }),
                react_1.default.createElement(_1.Button, { label: "Danger", danger: true }))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Theming" },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Button, { label: "With Theme", raised: true, theme: ['secondaryBg', 'onSecondary'] }),
                react_1.default.createElement(_1.Button, { label: "With Theme", theme: "secondary" }))),
        react_1.default.createElement(_doc_utils_1.DocsExample, null,
            react_1.default.createElement(_1.Button, null, "As Children")),
        react_1.default.createElement(_doc_utils_1.DocProps, { src: generated_props_json_1.default, components: [{ displayName: 'Button', component: _1.Button }] })));
}
exports.default = default_1;
exports.galleryExample = react_1.default.createElement(_1.Button, { raised: true, label: "Raised" });
