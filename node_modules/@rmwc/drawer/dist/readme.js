"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.galleryExample = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var _doc_utils_1 = require("@doc-utils");
var generated_props_json_1 = tslib_1.__importDefault(require("./generated-props.json"));
var generated_examples_json_1 = tslib_1.__importDefault(require("./generated-examples.json"));
var _1 = require(".");
var list_1 = require("../list");
var button_1 = require("../button");
function default_1() {
    return (react_1.default.createElement(_doc_utils_1.Docs, { title: "Drawers", lead: "A navigation drawer slides in from the left and contains the navigation destinations for your app.", module: "@rmwc/drawer", styles: ['@material/drawer/dist/mdc.drawer.css'], docsLink: "https://material.io/develop/web/components/drawers/", examples: generated_examples_json_1.default },
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Permanent"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "These are drawers that are permanently fixed inside of a view."),
        react_1.default.createElement(_doc_utils_1.DocsExample, null,
            react_1.default.createElement(_1.Drawer, null,
                react_1.default.createElement(_1.DrawerHeader, null,
                    react_1.default.createElement(_1.DrawerTitle, null, "DrawerHeader"),
                    react_1.default.createElement(_1.DrawerSubtitle, null, "Subtitle")),
                react_1.default.createElement(_1.DrawerContent, null,
                    react_1.default.createElement(list_1.List, null,
                        react_1.default.createElement(list_1.ListItem, null, "Cookies"),
                        react_1.default.createElement(list_1.ListItem, null, "Pizza"),
                        react_1.default.createElement(list_1.ListItem, null, "Icecream"))))),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Dismissible"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "These are drawers that can be toggled to an open or closed state inside of a view, but still takes up viewable space when closed."),
        react_1.default.createElement(_doc_utils_1.DocsExample, null, function Example() {
            var _a = tslib_1.__read(react_1.default.useState(false), 2), open = _a[0], setOpen = _a[1];
            return (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement("div", { style: { overflow: 'hidden', position: 'relative' } },
                    react_1.default.createElement(_1.Drawer, { dismissible: true, open: open },
                        react_1.default.createElement(_1.DrawerHeader, null,
                            react_1.default.createElement(_1.DrawerTitle, null, "DrawerHeader"),
                            react_1.default.createElement(_1.DrawerSubtitle, null, "Subtitle")),
                        react_1.default.createElement(_1.DrawerContent, null,
                            react_1.default.createElement(list_1.List, null,
                                react_1.default.createElement(list_1.ListItem, null, "Cookies"),
                                react_1.default.createElement(list_1.ListItem, null, "Pizza"),
                                react_1.default.createElement(list_1.ListItem, null, "Icecream")))),
                    react_1.default.createElement(_1.DrawerAppContent, { style: { minHeight: '15rem', padding: '1rem' } }, "DrawerAppContent is an optional component that will resize content when the dismissible drawer is open and closed. It must be placed directly after the Drawer component.")),
                react_1.default.createElement("div", { style: { textAlign: 'center' } },
                    react_1.default.createElement(button_1.Button, { onClick: function () { return setOpen(!open); }, raised: true }, "Toggle Dismissible"))));
        }),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Modal"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "These are drawers that can be temporarily displayed fixed on the side of the entire viewport."),
        react_1.default.createElement(_doc_utils_1.DocsExample, null, function Example() {
            var _a = tslib_1.__read(react_1.default.useState(false), 2), open = _a[0], setOpen = _a[1];
            return (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Drawer, { modal: true, open: open, onClose: function () { return setOpen(false); } },
                    react_1.default.createElement(_1.DrawerHeader, null,
                        react_1.default.createElement(_1.DrawerTitle, null, "DrawerHeader"),
                        react_1.default.createElement(_1.DrawerSubtitle, null, "Subtitle")),
                    react_1.default.createElement(_1.DrawerContent, null,
                        react_1.default.createElement(list_1.List, null,
                            react_1.default.createElement(list_1.ListItem, null, "Cookies"),
                            react_1.default.createElement(list_1.ListItem, null, "Pizza"),
                            react_1.default.createElement(list_1.ListItem, null, "Icecream")))),
                react_1.default.createElement(button_1.Button, { onClick: function () { return setOpen(!open); }, raised: true }, "Toggle Modal")));
        }),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Right Side Drawers"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "`material-components-web` doesn't directly support right hand drawers, but it respects the `dir` attribute on DOM elements. This simple hack will allow you to get drawers that appear from the right hand side of your app. As an aside, the `dir` attribute can be used to invert many other behaviors where the element is anchored on the left."),
        react_1.default.createElement(_doc_utils_1.DocsExample, null, function Example() {
            var _a = tslib_1.__read(react_1.default.useState(false), 2), open = _a[0], setOpen = _a[1];
            return (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.Drawer, { dir: "rtl", modal: true, open: open, onClose: function () { return setOpen(false); } },
                    react_1.default.createElement(_1.DrawerHeader, { dir: "ltr" },
                        react_1.default.createElement(_1.DrawerTitle, null, "Right Drawer"),
                        react_1.default.createElement(_1.DrawerSubtitle, null, "Subtitle")),
                    react_1.default.createElement(_1.DrawerContent, { dir: "ltr" },
                        react_1.default.createElement(list_1.List, null,
                            react_1.default.createElement(list_1.ListItem, null, "Cookies"),
                            react_1.default.createElement(list_1.ListItem, null, "Pizza"),
                            react_1.default.createElement(list_1.ListItem, null, "Icecream")))),
                react_1.default.createElement(button_1.Button, { onClick: function () { return setOpen(!open); }, raised: true }, "Toggle Right Drawer")));
        }),
        react_1.default.createElement(_doc_utils_1.DocProps, { src: generated_props_json_1.default, components: [
                { displayName: 'Drawer', component: _1.Drawer },
                { displayName: 'DrawerHeader', component: _1.DrawerHeader },
                { displayName: 'DrawerTitle', component: _1.DrawerTitle },
                { displayName: 'DrawerSubtitle', component: _1.DrawerSubtitle },
                { displayName: 'DrawerContent', component: _1.DrawerContent },
                { displayName: 'DrawerAppContent', component: _1.DrawerAppContent }
            ] })));
}
exports.default = default_1;
exports.galleryExample = (react_1.default.createElement(_1.Drawer, { style: { transform: 'scale(0.75', boxShadow: '0 0 4px rgba(0,0,0,0.1)' } },
    react_1.default.createElement(_1.DrawerHeader, null,
        react_1.default.createElement(_1.DrawerTitle, null, "DrawerHeader"),
        react_1.default.createElement(_1.DrawerSubtitle, null, "Subtitle")),
    react_1.default.createElement(_1.DrawerContent, null,
        react_1.default.createElement(list_1.List, null,
            react_1.default.createElement(list_1.ListItem, null, "Cookies"),
            react_1.default.createElement(list_1.ListItem, null, "Pizza"),
            react_1.default.createElement(list_1.ListItem, null, "Icecream")))));
