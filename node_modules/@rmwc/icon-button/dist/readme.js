"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.galleryExample = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var _doc_utils_1 = require("@doc-utils");
var generated_props_json_1 = tslib_1.__importDefault(require("./generated-props.json"));
var generated_examples_json_1 = tslib_1.__importDefault(require("./generated-examples.json"));
var _1 = require(".");
function default_1() {
    return (react_1.default.createElement(_doc_utils_1.Docs, { title: "Icon Buttons", lead: "Icon buttons allow users to take actions, and make choices, with a single tap.", module: "@rmwc/icon-button", styles: [
            '@material/icon-button/dist/mdc.icon-button.css',
            '@rmwc/icon/icon.css',
            '@material/ripple/dist/mdc.ripple.css'
        ], docsLink: "https://material.io/develop/web/components/buttons/icon-buttons/", examples: generated_examples_json_1.default },
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Basic Usage"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "`IconButton` inherits from the `Icon` component and can be passed icons in the same way."),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Default" },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.IconButton, { icon: "star", label: "Rate this!" }),
                react_1.default.createElement(_1.IconButton, { icon: "favorite", label: "Favorite", disabled: true }),
                react_1.default.createElement(_1.IconButton, { icon: "images/icons/twitter.png", "aria-label": "Tweet it!", tag: "a", target: "_blank", href: "https://twitter.com/intent/tweet?text=" + encodeURIComponent('You should definitely be using RMWC for your next project! https://rmwc.io') }))),
        react_1.default.createElement(_doc_utils_1.DocsSubtitle, null, "Usage as a Toggle"),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "To use as a toggle, specify an additional toggled on state using 'onIcon'."),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Uncontrolled" },
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.IconButton, { icon: "favorite_border", onIcon: "favorite" }),
                react_1.default.createElement(_1.IconButton, { icon: "favorite", onIcon: "favorite", disabled: true }))),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Controlled" }, function Controlled() {
            var _a = tslib_1.__read(react_1.default.useState(false), 2), isChecked = _a[0], setIsChecked = _a[1];
            return (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(_1.IconButton, { checked: isChecked, onClick: function () { return setIsChecked(!isChecked); }, onIcon: "star", icon: "star_border" }),
                react_1.default.createElement(_1.IconButton, { checked: isChecked, onClick: function () { return setIsChecked(!isChecked); }, onIcon: "images/icons/twitter.png", icon: "images/icons/facebook.png" })));
        }),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Component as Icon" },
            react_1.default.createElement(_1.IconButton, { onIcon: react_1.default.createElement("div", { style: {
                        background: 'red',
                        width: '24px',
                        height: '24px'
                    } }), icon: react_1.default.createElement("div", { style: {
                        background: 'green',
                        width: '24px',
                        height: '24px',
                        borderRadius: '50%'
                    } }) })),
        react_1.default.createElement(_doc_utils_1.DocProps, { src: generated_props_json_1.default, components: [{ displayName: 'IconButton', component: _1.IconButton }] })));
}
exports.default = default_1;
exports.galleryExample = react_1.default.createElement(_1.IconButton, { icon: "favorite_outlined" });
