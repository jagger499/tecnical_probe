import { __assign, __rest } from "tslib";
import { useEffect } from 'react';
import { useFoundation } from '@rmwc/base';
import { MDCIconButtonToggleFoundation } from '@material/icon-button';
export var useIconButtonFoundation = function (props) {
    var _a = useFoundation({
        props: props,
        elements: { rootEl: true },
        foundation: function (_a) {
            var rootEl = _a.rootEl, emit = _a.emit;
            return new MDCIconButtonToggleFoundation({
                addClass: function (className) { return rootEl.addClass(className); },
                removeClass: function (className) { return rootEl.removeClass(className); },
                hasClass: function (className) { return rootEl.hasClass(className); },
                setAttr: function (attrName, attrValue) {
                    return rootEl.setProp(attrName, attrValue);
                },
                notifyChange: function (evtData) { return emit('onChange', evtData); }
            });
        }
    }), foundation = _a.foundation, elements = __rest(_a, ["foundation"]);
    var rootEl = elements.rootEl;
    var isOn = props.checked !== undefined ? props.checked : foundation.isOn();
    useEffect(function () {
        if (isOn !== foundation.isOn()) {
            foundation.toggle(isOn);
        }
    }, [foundation, isOn]);
    var handleClick = function (evt) {
        var _a;
        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, evt);
        foundation.handleClick();
    };
    rootEl.setProp('onClick', handleClick, true);
    return __assign({ isOn: isOn, foundation: foundation }, elements);
};
