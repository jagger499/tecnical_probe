"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinearProgress = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var foundation_1 = require("./foundation");
var base_1 = require("@rmwc/base");
/** A component to display linear progress. */
exports.LinearProgress = base_1.createComponent(function LinearProgress(props, ref) {
    var reversed = props.reversed, closed = props.closed, progress = props.progress, buffer = props.buffer, foundationRef = props.foundationRef, rest = tslib_1.__rest(props, ["reversed", "closed", "progress", "buffer", "foundationRef"]);
    var className = base_1.useClassNames(props, [
        'mdc-linear-progress',
        {
            'mdc-linear-progress--reversed': reversed,
            'mdc-linear-progress--closed': closed
        }
    ]);
    var rootEl = foundation_1.useLinearProgressFoundation(props).rootEl;
    return (react_1.default.createElement(base_1.Tag, tslib_1.__assign({ "aria-label": "Progress Bar" }, rest, { "aria-valuemin": 0, "aria-valuemax": 1, "aria-valuenow": progress, tag: "nav", role: "progressbar", element: rootEl, className: className, ref: ref }),
        react_1.default.createElement(LinearProgressBody, null)));
});
var LinearProgressBody = react_1.default.memo(function LinearProgressBody() {
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { className: "mdc-linear-progress__buffering-dots" }),
        react_1.default.createElement("div", { className: "mdc-linear-progress__buffer" }),
        react_1.default.createElement("div", { className: "mdc-linear-progress__bar mdc-linear-progress__primary-bar" },
            react_1.default.createElement("div", { className: "mdc-linear-progress__bar-inner" })),
        react_1.default.createElement("div", { className: "mdc-linear-progress__bar mdc-linear-progress__secondary-bar" },
            react_1.default.createElement("div", { className: "mdc-linear-progress__bar-inner" }))));
});
