"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.galleryExample = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var _doc_utils_1 = require("@doc-utils");
var generated_props_json_1 = tslib_1.__importDefault(require("./generated-props.json"));
var generated_examples_json_1 = tslib_1.__importDefault(require("./generated-examples.json"));
var _1 = require(".");
function default_1() {
    return (react_1.default.createElement(_doc_utils_1.Docs, { title: "Sliders", lead: "Sliders let users select from a range of values by moving the slider thumb.", module: "@rmwc/slider", styles: ['@material/slider/dist/mdc.slider.css'], docsLink: "https://material.io/develop/web/components/input-controls/sliders/", examples: generated_examples_json_1.default },
        react_1.default.createElement(_doc_utils_1.DocsP, null, "Sliders can be both uncontrolled and controlled. When creating a controlled `Slider`, you should be listening to the `onInput` event and use `evt.detail.value` to set your new value."),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "Sliders will automatically layout themselves on window resize. If you need to manually trigger a layout because the sliders container size changed, the simplest way is to trigger a resize event `window.dispatchEvent(new Event('resize'));`."),
        react_1.default.createElement(_doc_utils_1.DocsP, null, "**Known Issue** `material-components-web` uses pointer events internally. If you are using something below React 16.4, you will see unknown attribute errors, however the slider should still work."),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Uncontrolled" },
            react_1.default.createElement(_1.Slider, { onInput: function (evt) { return console.log(evt); }, onChange: function (evt) { return console.log(evt); } })),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "Controlled" }, function Example() {
            var _a = tslib_1.__read(react_1.default.useState(50), 2), value = _a[0], setValue = _a[1];
            // onInput is required and will fire continuously.
            // onChange is optional and fires at the end of the interaction
            return (react_1.default.createElement(_1.Slider, { value: value, onChange: function (evt) { return setValue(evt.detail.value); }, onInput: function (evt) { return setValue(evt.detail.value); }, discrete: true, step: 1 }));
        }),
        react_1.default.createElement(_doc_utils_1.DocsExample, { label: "With Markers" },
            react_1.default.createElement(_1.Slider, { discrete: true, displayMarkers: true, min: 100, max: 200, step: 5 })),
        react_1.default.createElement(_doc_utils_1.DocProps, { src: generated_props_json_1.default, components: [{ displayName: 'Slider', component: _1.Slider }] })));
}
exports.default = default_1;
exports.galleryExample = (react_1.default.createElement(_1.Slider, { style: { minWidth: '10rem' }, value: 66, onChange: function () { } }));
