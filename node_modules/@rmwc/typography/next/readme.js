import { __rest } from "tslib";
import React from 'react';
import { Docs, DocsP, DocsExample, DocProps, DocsSubtitle } from '@doc-utils';
import propsSrc from './generated-props.json';
import examples from './generated-examples.json';
import { Typography } from '.';
import { RMWCProvider } from '../provider';
export default function () {
    return (React.createElement(Docs, { title: "Typography", lead: "Material Design\u2019s text sizes and styles were developed to balance content density and reading comfort under typical usage conditions.", module: "@rmwc/typography", styles: ['@material/typography/dist/mdc.typography.css'], docsLink: "https://material.io/develop/web/components/typography/", examples: examples },
        React.createElement(DocsSubtitle, null, "Basic Usage"),
        React.createElement(DocsExample, null,
            React.createElement(React.Fragment, null,
                React.createElement(Typography, { use: "headline1" }, "headline1"),
                React.createElement(Typography, { use: "headline2" }, "headline2"),
                React.createElement(Typography, { use: "headline3" }, "headline3"),
                React.createElement(Typography, { use: "headline4" }, "headline4"),
                React.createElement(Typography, { use: "headline5" }, "headline5"),
                React.createElement(Typography, { use: "headline6" }, "headline6"),
                React.createElement(Typography, { use: "subtitle1" }, "subtitle1"),
                React.createElement(Typography, { use: "subtitle2" }, "subtitle2"),
                React.createElement(Typography, { use: "body1" }, "body1"),
                React.createElement(Typography, { use: "body2" }, "body2"),
                React.createElement(Typography, { use: "caption" }, "caption"),
                React.createElement(Typography, { use: "button" }, "button"),
                React.createElement(Typography, { use: "overline" }, "overline"))),
        React.createElement(DocsExample, { label: "Specify tag" },
            React.createElement(Typography, { use: "headline6", tag: "h3" }, "headline6")),
        React.createElement(DocsSubtitle, null, "Provider Setup"),
        React.createElement(DocsP, null, "You can globally map specify type classes to HTML tags for semantics, or specify a default to be used instead of `span`."),
        React.createElement(DocsExample, { label: "Specify tag" },
            React.createElement(RMWCProvider, { typography: {
                    /** Make all Typography components default to <div>  */
                    defaultTag: 'div',
                    /** Make headline5 <h5>  */
                    headline5: 'h5',
                    /** Make body2 <p>  */
                    body2: 'p',
                    /** Use your own component  */
                    body1: function (_a) {
                        var children = _a.children, rest = __rest(_a, ["children"]);
                        return (React.createElement("span", null,
                            React.createElement("b", null,
                                children,
                                "!!!")));
                    }
                } },
                React.createElement(Typography, { use: "headline6" }, "Rendered default `div`"),
                React.createElement(Typography, { use: "headline5" }, "Rendered with `h5`"),
                React.createElement(Typography, { use: "body2" }, "Rendered with `p`"),
                React.createElement(Typography, { use: "body1" }, "Custom rendering"))),
        React.createElement(DocProps, { src: propsSrc, components: [{ displayName: 'Typography', component: Typography }] })));
}
export var galleryExample = (React.createElement("div", { style: { transform: 'scale(1.5)' } },
    React.createElement(Typography, { tag: "div", use: "headline6" }, "headline6"),
    React.createElement(Typography, { tag: "div", use: "body1" }, "body1"),
    React.createElement(Typography, { tag: "div", use: "caption" }, "caption")));
